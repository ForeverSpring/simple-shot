//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""bca8cdc7-3bad-49ca-9782-123b6cd678e6"",
            ""actions"": [
                {
                    ""name"": ""Axes"",
                    ""type"": ""Value"",
                    ""id"": ""0f26fde4-c14a-45f8-9a84-544c253bdb4a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LowSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""1f5a49f1-facb-4372-a87c-7612fe8fabd7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""a3877b00-0541-48cc-8cbd-9ceb2ffb4661"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Bomb"",
                    ""type"": ""Button"",
                    ""id"": ""8e8608a8-dd60-4827-ae0a-42944272b4a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""d2b184f8-1ae6-4a0a-9893-6645da5cc929"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dialog"",
                    ""type"": ""Button"",
                    ""id"": ""b310350d-cb24-479c-9767-4f0c4a5acaaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipDialog"",
                    ""type"": ""Button"",
                    ""id"": ""3b449e3f-d3e0-4c18-a4cb-8a3d85786d0b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""19d0dfaa-ba7d-46b9-a91f-ba3085a66c50"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""399f6f55-aa16-4f7c-983e-d8448e097307"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""05007e8e-f510-45e3-94ad-a26417366fbc"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""da585ca4-0a5b-43b9-bd60-cfb32c8e28b5"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4f588f4a-dab7-4254-aa20-0a70ccfe6f7d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Axes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7341393a-762c-4497-8bfe-92ea0f8aaa7b"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LowSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65f0d5b3-ccad-48f3-b21f-2396fcb0b026"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f150c5de-0138-4d96-bff3-4c4d3d34a99d"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0a86ac7-0ec7-43fb-814d-df57e49306a7"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f5e4797-4cc3-4955-8d70-75dce0cba8c8"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dialog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4cd4d32-d3f5-4e7e-b45f-41cd60adc0bf"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipDialog"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GameMenu"",
            ""id"": ""d75a685c-f973-48e0-bef0-de5819caf1b3"",
            ""actions"": [
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""18e2ff5e-feb6-4303-843e-0becc31541d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""previous"",
                    ""type"": ""Button"",
                    ""id"": ""955184f7-745f-4544-a670-f75b56839d12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Enter"",
                    ""type"": ""Button"",
                    ""id"": ""1853fd26-3c34-48ea-a8ad-4e3996d49e62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""d91b3997-63af-4ba7-bd68-19f3536f85e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Increase"",
                    ""type"": ""Button"",
                    ""id"": ""74cddd67-5ca1-4af8-bbe8-697be6df4f53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decrease"",
                    ""type"": ""Button"",
                    ""id"": ""40706782-84b5-489b-8c2d-3eaed91d08cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d62db1b3-7807-49e0-a13f-b3f35872c27d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a53fc193-a029-4a46-871e-91bf5c018d09"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""previous"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca16aa52-9bff-4407-8589-35992c08d1f6"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa12a747-27fc-4694-92f9-ae24b737dd85"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Enter"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3db23cb-dc16-45e5-940c-1407e16f7233"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35e182fa-ca91-486b-8d26-7b6ca4af27b4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Increase"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfaafbd2-8755-4261-a387-c42e58434bac"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Decrease"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlay
        m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
        m_GamePlay_Axes = m_GamePlay.FindAction("Axes", throwIfNotFound: true);
        m_GamePlay_LowSpeed = m_GamePlay.FindAction("LowSpeed", throwIfNotFound: true);
        m_GamePlay_Fire = m_GamePlay.FindAction("Fire", throwIfNotFound: true);
        m_GamePlay_Bomb = m_GamePlay.FindAction("Bomb", throwIfNotFound: true);
        m_GamePlay_Pause = m_GamePlay.FindAction("Pause", throwIfNotFound: true);
        m_GamePlay_Dialog = m_GamePlay.FindAction("Dialog", throwIfNotFound: true);
        m_GamePlay_SkipDialog = m_GamePlay.FindAction("SkipDialog", throwIfNotFound: true);
        // GameMenu
        m_GameMenu = asset.FindActionMap("GameMenu", throwIfNotFound: true);
        m_GameMenu_Next = m_GameMenu.FindAction("Next", throwIfNotFound: true);
        m_GameMenu_previous = m_GameMenu.FindAction("previous", throwIfNotFound: true);
        m_GameMenu_Enter = m_GameMenu.FindAction("Enter", throwIfNotFound: true);
        m_GameMenu_Exit = m_GameMenu.FindAction("Exit", throwIfNotFound: true);
        m_GameMenu_Increase = m_GameMenu.FindAction("Increase", throwIfNotFound: true);
        m_GameMenu_Decrease = m_GameMenu.FindAction("Decrease", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay
    private readonly InputActionMap m_GamePlay;
    private IGamePlayActions m_GamePlayActionsCallbackInterface;
    private readonly InputAction m_GamePlay_Axes;
    private readonly InputAction m_GamePlay_LowSpeed;
    private readonly InputAction m_GamePlay_Fire;
    private readonly InputAction m_GamePlay_Bomb;
    private readonly InputAction m_GamePlay_Pause;
    private readonly InputAction m_GamePlay_Dialog;
    private readonly InputAction m_GamePlay_SkipDialog;
    public struct GamePlayActions
    {
        private @PlayerInputActions m_Wrapper;
        public GamePlayActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Axes => m_Wrapper.m_GamePlay_Axes;
        public InputAction @LowSpeed => m_Wrapper.m_GamePlay_LowSpeed;
        public InputAction @Fire => m_Wrapper.m_GamePlay_Fire;
        public InputAction @Bomb => m_Wrapper.m_GamePlay_Bomb;
        public InputAction @Pause => m_Wrapper.m_GamePlay_Pause;
        public InputAction @Dialog => m_Wrapper.m_GamePlay_Dialog;
        public InputAction @SkipDialog => m_Wrapper.m_GamePlay_SkipDialog;
        public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
        public void SetCallbacks(IGamePlayActions instance)
        {
            if (m_Wrapper.m_GamePlayActionsCallbackInterface != null)
            {
                @Axes.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAxes;
                @Axes.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAxes;
                @Axes.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAxes;
                @LowSpeed.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLowSpeed;
                @LowSpeed.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLowSpeed;
                @LowSpeed.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnLowSpeed;
                @Fire.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnFire;
                @Bomb.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBomb;
                @Bomb.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBomb;
                @Bomb.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnBomb;
                @Pause.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnPause;
                @Dialog.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnDialog;
                @Dialog.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnDialog;
                @Dialog.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnDialog;
                @SkipDialog.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnSkipDialog;
                @SkipDialog.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnSkipDialog;
                @SkipDialog.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnSkipDialog;
            }
            m_Wrapper.m_GamePlayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Axes.started += instance.OnAxes;
                @Axes.performed += instance.OnAxes;
                @Axes.canceled += instance.OnAxes;
                @LowSpeed.started += instance.OnLowSpeed;
                @LowSpeed.performed += instance.OnLowSpeed;
                @LowSpeed.canceled += instance.OnLowSpeed;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Bomb.started += instance.OnBomb;
                @Bomb.performed += instance.OnBomb;
                @Bomb.canceled += instance.OnBomb;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Dialog.started += instance.OnDialog;
                @Dialog.performed += instance.OnDialog;
                @Dialog.canceled += instance.OnDialog;
                @SkipDialog.started += instance.OnSkipDialog;
                @SkipDialog.performed += instance.OnSkipDialog;
                @SkipDialog.canceled += instance.OnSkipDialog;
            }
        }
    }
    public GamePlayActions @GamePlay => new GamePlayActions(this);

    // GameMenu
    private readonly InputActionMap m_GameMenu;
    private IGameMenuActions m_GameMenuActionsCallbackInterface;
    private readonly InputAction m_GameMenu_Next;
    private readonly InputAction m_GameMenu_previous;
    private readonly InputAction m_GameMenu_Enter;
    private readonly InputAction m_GameMenu_Exit;
    private readonly InputAction m_GameMenu_Increase;
    private readonly InputAction m_GameMenu_Decrease;
    public struct GameMenuActions
    {
        private @PlayerInputActions m_Wrapper;
        public GameMenuActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Next => m_Wrapper.m_GameMenu_Next;
        public InputAction @previous => m_Wrapper.m_GameMenu_previous;
        public InputAction @Enter => m_Wrapper.m_GameMenu_Enter;
        public InputAction @Exit => m_Wrapper.m_GameMenu_Exit;
        public InputAction @Increase => m_Wrapper.m_GameMenu_Increase;
        public InputAction @Decrease => m_Wrapper.m_GameMenu_Decrease;
        public InputActionMap Get() { return m_Wrapper.m_GameMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameMenuActions set) { return set.Get(); }
        public void SetCallbacks(IGameMenuActions instance)
        {
            if (m_Wrapper.m_GameMenuActionsCallbackInterface != null)
            {
                @Next.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnNext;
                @Next.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnNext;
                @Next.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnNext;
                @previous.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnPrevious;
                @previous.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnPrevious;
                @previous.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnPrevious;
                @Enter.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnEnter;
                @Enter.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnEnter;
                @Enter.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnEnter;
                @Exit.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnExit;
                @Exit.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnExit;
                @Exit.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnExit;
                @Increase.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnIncrease;
                @Increase.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnIncrease;
                @Increase.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnIncrease;
                @Decrease.started -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnDecrease;
                @Decrease.performed -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnDecrease;
                @Decrease.canceled -= m_Wrapper.m_GameMenuActionsCallbackInterface.OnDecrease;
            }
            m_Wrapper.m_GameMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @previous.started += instance.OnPrevious;
                @previous.performed += instance.OnPrevious;
                @previous.canceled += instance.OnPrevious;
                @Enter.started += instance.OnEnter;
                @Enter.performed += instance.OnEnter;
                @Enter.canceled += instance.OnEnter;
                @Exit.started += instance.OnExit;
                @Exit.performed += instance.OnExit;
                @Exit.canceled += instance.OnExit;
                @Increase.started += instance.OnIncrease;
                @Increase.performed += instance.OnIncrease;
                @Increase.canceled += instance.OnIncrease;
                @Decrease.started += instance.OnDecrease;
                @Decrease.performed += instance.OnDecrease;
                @Decrease.canceled += instance.OnDecrease;
            }
        }
    }
    public GameMenuActions @GameMenu => new GameMenuActions(this);
    public interface IGamePlayActions
    {
        void OnAxes(InputAction.CallbackContext context);
        void OnLowSpeed(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnBomb(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnDialog(InputAction.CallbackContext context);
        void OnSkipDialog(InputAction.CallbackContext context);
    }
    public interface IGameMenuActions
    {
        void OnNext(InputAction.CallbackContext context);
        void OnPrevious(InputAction.CallbackContext context);
        void OnEnter(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
        void OnIncrease(InputAction.CallbackContext context);
        void OnDecrease(InputAction.CallbackContext context);
    }
}
